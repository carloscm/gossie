drop keyspace TestGossie;

create keyspace TestGossie
  with placement_strategy = 'SimpleStrategy' and
  strategy_options = {replication_factor: 1} and
  durable_writes = true;

use TestGossie;

create column family AllTypes with
	comparator = AsciiType and
	key_validation_class = BytesType and
	default_validation_class = UTF8Type and
	column_metadata = [
		{column_name: colBytesType, validation_class: BytesType},
		{column_name: colAsciiType, validation_class: AsciiType, index_type: KEYS},
		{column_name: colUTF8Type, validation_class: UTF8Type},
		{column_name: colLongType, validation_class: LongType, index_type: KEYS},
		{column_name: colIntegerType, validation_class: IntegerType},
		{column_name: colDecimalType, validation_class: DecimalType},
		{column_name: colUUIDType, validation_class: UUIDType},
		{column_name: colBooleanType, validation_class: BooleanType},
		{column_name: colFloatType, validation_class: FloatType},
		{column_name: colDoubleType, validation_class: DoubleType},
		{column_name: colDateType, validation_class: DateType}
	]
;

create column family Counters with
	comparator = AsciiType and
	key_validation_class = BytesType and
	default_validation_class = CounterColumnType
;

create column family Composite with
	comparator = 'CompositeType(BytesType,AsciiType,UTF8Type,LongType,IntegerType,DecimalType,UUIDType,BooleanType,FloatType,DoubleType,DateType)' and
	key_validation_class = BytesType and
	default_validation_class = BytesType
;

create column family ReasonableZero with
	comparator = AsciiType and
	key_validation_class = UTF8Type and
	default_validation_class = BytesType
;

create column family ReasonableOne with
	comparator = 'CompositeType(LongType,AsciiType)' and
	key_validation_class = UTF8Type and
	default_validation_class = BytesType
;

create column family ReasonableTwo with
	comparator = 'CompositeType(LongType,LongType,AsciiType)' and
	key_validation_class = UTF8Type and
	default_validation_class = BytesType
;

create column family Timeseries with
	comparator = 'CompositeType(TimeUUIDType(reversed=true),AsciiType)' and
	key_validation_class = UTF8Type and
	default_validation_class = BytesType
;

create column family CompositeFull with
	comparator = 'CompositeType(BytesType,AsciiType,UTF8Type,LongType,Int32Type,UUIDType,LexicalUUIDType,TimeUUIDType,BooleanType,FloatType,DoubleType,DateType)' and
	key_validation_class = BytesType and
	default_validation_class = BytesType
;
